 CLASSTEST:-1 
**************************************************************************************************************************
Rectangular numbers
**************************************************************************************************************************
import java.util.*;

public class solution {

	public static void print(int n) 
	{
		// Write your code here
		for (int i = 1 - n; i < n; i++)
		 {
			for (int j = 1 - n; j < n; j++) 
			{
				if (Math.abs(i) > Math.abs(j))
				 {
					System.out.print((Math.abs(i) + 1));
				}
				 else
				 {
					System.out.print((Math.abs(j) + 1));
				}
			}
			System.out.println();
		}
	}

}


**************************************************************************************************************************
Output::6
Result::
66666666666
65555555556
65444444456
65433333456
65432223456
65432123456
65432223456
65433333456
65444444456
65555555556
66666666666


**************************************************************************************************************************
Find Maximum Subarray Sum
**************************************************************************************************************************
import java.util.*;

public class Solution 
{
  public static long maxSum(int arr[], int n, int k)
    {
             
       
        long res = 0;
        for (int i=0; i<k; i++)
           res += arr[i];
        long curr_sum = res;
        for (int i=k; i<n; i++)
        {
           curr_sum += arr[i] - arr[i-k];
           res = Math.max(res, curr_sum);
        }
      
        return res;
    }

  public static void main(String[] args)
   {
      Scanner T = new Scanner(System.in);
      int n = T.nextInt();
      int x = T.nextInt();
      int arr[] = new int[n];
      for(int i = 0 ; i <n ; i++){
        arr[i] = T.nextInt();
      }
      long max = maxSum(arr, n, x);
      System.out.println(max);

    }
  }
 
 
**************************************************************************************************************************
Output::4 1
1 2 3 4
Result:4


**************************************************************************************************************************
Faulty Keyboard
**************************************************************************************************************************
import java.util.Scanner;
public class Solution {
    public static boolean isPossible(String name, String typed) {
        // Write your code here
        if(name.length() > typed.length()) return false;
        
        int i = 0;
        int j = 0;
        
        while(i != name.length() && j != typed.length()) {
            if(name.charAt(i) == typed.charAt(j)) {
                i++;
                j++;
            } else if(i > 0 && name.charAt(i - 1) == typed.charAt(j)) {
                j++;
            } else {
                return false;
            }
        }
        
        while(j < typed.length()) {
            if(typed.charAt(j) != name.charAt(i - 1)) return false; 
            j++;
        }
        
        return i < name.length() ? false : true;
    }

    

    public static void main(String[] args) {
        Scanner scn = new Scanner(System.in);
        int n=scn.nextInt();
        for(int i=0;i<n;i++){
            String name = scn.next();
        String typed = scn.next();

        boolean res = isPossible(name, typed);

        System.out.println(res);
        }
    }
}


**************************************************************************************************************************
Output:
code
cooodeee
hello
hheeeloo

Result:- True
False
**************************************************************************************************************************
